class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
      int row=obstacleGrid.size();
        int col=obstacleGrid[0].size();
        if (row==0) return 0;
        if (col==0) return 0;
 
       vector<vector<int>> d(row+1, vector<int>(col+1, 0));
    
        d[0][0] = obstacleGrid[0][0] ? 0 : 1;
        
         if (obstacleGrid[0][0] == 1) 
         {
            d[0][0]=0;
         }else {
            d[0][0]=1;
         }
         
         for(int i=1; i<row; i++)
             if (obstacleGrid[i][0]|| !d[i-1][0])
                d[i][0] = 0;
            else 
                d[i][0] = 1;
     
         for(int i=1; i<col; i++)
              if (obstacleGrid[0][i]|| !d[0][i-1])
                d[0][i] = 0;
              else 
                d[0][i] = 1;
        
         
        for (int i=1;i<row;i++)
            for (int j=1;j<col;j++)
                if (!obstacleGrid[i][j])
                    d[i][j]=d[i-1][j]+d[i][j-1];
                else 
                    d[i][j]=0;
 
        
         return d[row-1][col-1];   
         
    
    }
};
