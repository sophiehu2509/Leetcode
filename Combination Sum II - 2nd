class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
         sort(candidates.begin(), candidates.end());
       for (int i = candidates.size() - 1; i>=0; i--)
            if (candidates[i] > target)
               candidates.pop_back();
                
        vector<int> res;
        vector<vector<int>> ans;
         helper(candidates, target, res, 0,  ans);
         
         return ans;
    }
    void helper (vector<int>& candidates, int target, vector<int>& res, int pos,  vector<vector<int>> & ans){
        
        if (target == 0){
            ans.push_back(res);
            return;
        }
        
        for (int i = pos; i<candidates.size(); i++){
            if(i >pos && candidates[i] == candidates[i - 1] ) 
                continue;
                
            if (candidates[i] > target) return;
            
            res.push_back(candidates[i]);
            helper(candidates, target - candidates[i], res, i + 1,  ans);
            res.pop_back();
            
        }
        
        
    }
    
};
