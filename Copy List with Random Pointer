/**
 * Definition for singly-linked list with a random pointer.
 * struct RandomListNode {
 *     int label;
 *     RandomListNode *next, *random;
 *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}
 * };
 */
class Solution {
public:
    RandomListNode *copyRandomList(RandomListNode *head) {
       if (head == NULL) 
            return NULL;
            
        RandomListNode *node = head;
        
        while (node != NULL){
            RandomListNode * copy = new RandomListNode (node -> label);
            copy -> next = node -> next;
            node -> next = copy;
            node = copy -> next;
           
        }
        
        
        node = head;
         
        while (node != NULL){
            RandomListNode * copy = node -> next;
            if (node -> random != NULL)
                copy -> random = node -> random -> next;
            node = copy -> next;
             
        }
        
        node = head;
        RandomListNode *re_node =  head == NULL? NULL: head -> next;
        
       while (node != NULL) {
           RandomListNode * copy = node -> next;
           node -> next = copy -> next;
           if (copy -> next != NULL)
                copy -> next =  copy -> next -> next;
           node = node -> next;
       }
        
        return re_node;
    }

};
