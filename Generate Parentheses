class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> res;
        string s = "";
       
       if (n > 0) 
         helper (res, n, 0, 0, s);
         
        return res;
    }
    
    void helper (vector<string> &res, int n, int left, int right, string s){
        if (s.length() == 2*n)
        {
            res.push_back(s);
            return;
        }
        
        if (left < n){
            s += '(';
            helper (res, n, left + 1, right, s);
            s.erase(s.size() -1, 1);
            
        }
        if (right < left){
             s += ')';
            helper (res, n, left, right + 1, s);
            s.erase(s.size() -1, 1);
        }
        
    }
};
