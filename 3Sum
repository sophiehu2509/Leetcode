class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        if (nums.size()<3) return {};
        
        vector<vector<int>> result;
        sort(nums.begin(),nums.end());
        int left=0;
        int right=0;
        int first=0;
        for (int i=0;i<nums.size()-2;i++)
        {
            if (i>=1 && nums[i]==nums[i-1]) continue;
            first=i;
            left=i+1;
            right=nums.size()-1;
            while (left<right )
            {
                if (nums[left]+nums[right]==0-nums[first])
                {
                    result.push_back({nums[i], nums[left], nums[right] });
                    right--;
                    left++;
                
                }
                else if (nums[left]+nums[right]>0-nums[first])
                {
                    right--;
                }
                else if (nums[left]+nums[right]<0-nums[first])
                {
                    left++;
                }
                 while ((left>i+1 && nums[left]==nums[left-1] )|| left==i) 
                {
                    left++;
                }
                while ((right<nums.size()-2 && nums[right]==nums[right+1])|| right==i) 
                {
                   
                    right--;
                }
            }
           
        }
        return result;
    }
};
